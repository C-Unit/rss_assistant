name: Test and Build Release

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-24.04-arm

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.18'
        otp-version: '27'

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile
      run: mix compile

    - name: Set up database
      run: mix ecto.setup
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/rss_assistant_test
        PGPASSWORD: postgres

    - name: Run tests
      run: mix test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/rss_assistant_test
        PGPASSWORD: postgres

    - name: Build assets
      run: MIX_ENV=prod mix assets.deploy

    - name: Build release with ERTS
      run: MIX_ENV=prod mix release

    - name: Create tarball
      run: |
        cd _build/prod/rel
        tar -czf ../../../rss_assistant-${{ github.sha }}.tar.gz rss_assistant

    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: rss_assistant-release-${{ github.sha }}
        path: rss_assistant-${{ github.sha }}.tar.gz
        retention-days: 30